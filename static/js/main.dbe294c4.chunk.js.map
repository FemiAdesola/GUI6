{"version":3,"sources":["Exercise6.2.js","Exercise6.3.js","reportWebVitals.js","index.js"],"names":["Ap","React","useState","screen","setScreen","box","setBox","dtf","Intl","DateTimeFormat","Language","timeZone","hour","weekday","day","month","year","Paper","variant","display","justifyContent","style","backgroundColor","width","marginTop","padding","marginLeft","textAlign","Box","position","p","format","justify","TextField","value","onChange","event","target","placeholder","disabled","border","RadioGroup","FormControl","FormLabel","component","FormControlLabel","label","control","Radio","onClick","parseFloat","toFixed","Button","color","useStyles","makeStyles","theme","menuButton","marginRight","spacing","A","anchorEl","setAnchorEl","locale","setLocale","supportedLocales","setSupportedLocales","menuOpen","Boolean","df","minute","second","bundle","texts","hasOwnProperty","useEffect","allLocales","i","length","j","languageString","supported","NumberFormat","supportedLocalesOf","push","styledClasses","square","className","edge","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","map","item","index","l","Locale","MenuItem","language","m","Typography","title","DATE_IS","Date","Text_Input","reverse","join","screen_Reversed","borderRadius","borderColor","blue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbe294c4.chunk.js","sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport { FormControl } from '@material-ui/core';\nimport { FormLabel } from '@material-ui/core';\nimport { FormControlLabel } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Button from '@material-ui/core/Button';\nimport { Language } from '@material-ui/icons';\nimport useEffect from 'react';\n\nconst RATE = 1.23;\nconst BASE_URL='https://api.exchangeratesapi.io/latest'\nfunction Ap() {\n    const [screen, setScreen] = React.useState(\"\");\n    const [box, setBox] = React.useState();\n   \n    /* useEffect(() => {\n        fetch(BASE_URL)\n            .then(res => res.json())\n        .then(data=>setScreen(data.base, ...object.keys(data.rates)))\n}, [])*/\n\n   //date stuff \n    const dtf = new Intl.DateTimeFormat(Language, {timeZone:'Europe/Helsinki', hour:\"false\", weekday:\"long\", day:\"numeric\",  month:\"long\", year:\"numeric\", hour:\"numeric\", minute:\"numeric\", second:\"2-digit\" });\n    \n    //\n  \n    const cancel = (event) => {\n        setScreen(\"\");\n        setBox(\"\");\n    }\n    const updateS = (event) => {\n\t\tsetScreen(event.target.value);\n    }\n\n    // List of Currency and Unicode (https://aboutreact.com/react-native-currency-symbols/)\n    const convert = () => setBox('\\u0024' +  parseFloat(screen * RATE).toFixed(2));\n    const convert1 = () => setBox('\\u20AC' + parseFloat(screen / RATE).toFixed(2));\n    //\n \n   \n    return (\n      <Paper variant=\"outlined\"  display=\"flex\" justifyContent=\"center\" style={{backgroundColor: 'blue', width: 500, marginTop: 50, padding: 50,}} >\n             <Paper style={{backgroundColor: 'white', width: 385, marginLeft: 55, textAlign: 'center'}}  variant=\"outlined\"  display=\"flex\" justifyContent=\"center\">\n               The exchange rate at <Box position=\"static\"\n                justifyContent=\"center\"\n                p={1}>{dtf.format()}</Box>\n                is\n                \n                <Box justify=\"center\">\n                        <TextField variant=\"outlined\" value={screen} onChange={updateS} placeholder=\"Type amount here\" />\n                 <TextField  disabled={true} variant=\"filled\" value={box} placeholder=\"Exchange appear here\" />\n                </Box>\n                </Paper>\n                    <Paper style={{backgroundColor: 'white', width: 285, marginLeft: 55, padding: 50, textAlign: 'center'}}  variant=\"outlined\"  display=\"flex\" justifyContent=\"center\">\n                <Box display=\"flex\" justifyContent=\"center\" border={1}>\n                    Direction:\n                    <RadioGroup >\n                    <FormControl >      \n                    <FormLabel component=\"legend\" style={{ justifyContent: \"center\" }}></FormLabel>\n                    <FormControlLabel label=\"€ to $\" value=\"Euro\" control={<Radio onClick={convert}></Radio>}></FormControlLabel> \n                    <FormControlLabel label=\"$ to €\" value=\"dollar\" control={<Radio onClick={convert1}></Radio>}></FormControlLabel>\n                    </FormControl>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={cancel}>Cancle</Button>\n                    </RadioGroup>\n                </Box>\n                </Paper>\n            </Paper>\n  );\n}\nexport default Ap;","import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport texts from './texts.json';\nimport { FormControl } from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nfunction A() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [locale, setLocale] = React.useState(\"en\");\n    const [supportedLocales, setSupportedLocales] = React.useState([]);\n    const [screen, setScreen] = React.useState(\"\");\n    const menuOpen = Boolean(anchorEl);\n\t\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n    const updateS = (event) => {\n        setScreen([...event.target.value].reverse().join(\"\"));\n    }\n    const df = new Intl.DateTimeFormat(locale, { weekday: 'long', day: 'numeric', month: 'long', hour:'2-digit', minute:'2-digit', second:'2-digit'});\n  \n\t\n\n\tconst bundle = texts.hasOwnProperty(locale)?texts[locale]:texts[\"en\"];\n\t// from lecture\n\tReact.useEffect(() => {\n\t\tconst allLocales = [];\n\t\tfor (let i = 0; i < \"abcdefghijklmnopqrstuvwxyz\".length; i++) {\n\t\t\tfor (let j = 0; j < \"abcdefghijklmnopqrstuvwxyz\".length; j++) {\n\t\t\t\tlet languageString = \"abcdefghijklmnopqrstuvwxyz\"[i] + \"abcdefghijklmnopqrstuvwxyz\"[j];\n\t\t\t\tlet supported = Intl.NumberFormat.supportedLocalesOf(languageString);\n\t\t\t\tif (supported.length > 0)\n\t\t\t\t\tallLocales.push(supported[0]);\n\t\t\t}\n\t\t}\n\t\tsetSupportedLocales(allLocales);\n\t}, []);\n\t\n\tconst styledClasses = useStyles();\n\t\n\t\n    return (\n        <Paper variant=\"outlined\" square style={{backgroundColor:'gray', width: 500,  marginTop: 50, padding: 50, }} display=\"flex\" >\n\t\t<div className=\"App\">\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\" \n\t\t\t\tedge=\"start\" \n\t\t\t\tclassName={styledClasses.menuButton} \n\t\t\t\tcolor=\"inherit\" \n\t\t\t\tonClick={handleMenu}\n\t\t\t>\n\t\t\t\t{locale}\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"locale-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t}}\n\t\t\t\tkeepMounted\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t}}\n\t\t\t\topen={menuOpen}\n\t\t\t\tonClose={handleMenuClose}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tsupportedLocales.map((item, index) =>  {\n\t\t\t\t\t\tlet l = new Intl.Locale(item);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem \n\t\t\t\t\t\t\t\tkey={\"localeItem_\" + index + \"_\" + item} \n                                onClick={(event) => {\n                                    setLocale(item);\n                                    setAnchorEl(null);\n                                }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{l.language}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Menu>\n\t\t\t\n\t\t\t<Box border={2}>\n                    <Box p={2} m={1}><Typography variant=\"h6\" className={styledClasses.title}>{bundle.DATE_IS}:  {df.format(new Date())}</Typography>\n                    <Box p={2} m={1} ><Typography variant=\"h6\" className={styledClasses.title} >{bundle.Text_Input}</Typography></Box>\n                        <TextField variant=\"outlined\" className={styledClasses.title} onChange={updateS} placeholder=\"Type your text here\">\n                    </TextField>\n                    </Box>        \n\t\t\t\t<Box p={2} m={1} ><Typography variant=\"outlined\" className={styledClasses.title}>{bundle.screen_Reversed}</Typography></Box>\n                   \n                    <FormControl justify=\"center\">\n                     <Box borderRadius={20} borderColor={blue} p={2} m={1} border={2}>{screen}</Box>  \n                \n                </FormControl>\n                </Box>\n            \n            </div>\n            </Paper>\n\t);\n}\n\nexport default A;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Ap from './Exercise6.2';\nimport A from './Exercise6.3';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Ap />\n    <A />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}